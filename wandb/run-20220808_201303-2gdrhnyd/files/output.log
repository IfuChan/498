
Use GPU: 0 for training
==> training...
Epoch: [1][0/378]	GPU 0	Time: 3.046	Loss 0.8915	Acc@1 40.625	Acc@5 100.000	Precision 0.406	Recall 1.000	Macro_f1 0.578	Micro_f1 0.578	
Epoch: [1][200/378]	GPU 0	Time: 79.574	Loss 0.6377	Acc@1 70.491	Acc@5 100.000	Precision 0.460	Recall 0.330	Macro_f1 0.348	Micro_f1 0.348	
 * Epoch 1, Acc@1 73.012, Acc@5 100.000, precision 0.552, recall 0.416, macro_f1 0.446, micro_f1 0.446, Time 290.51
Test: [0/95]	GPU: 0	Time: 0.956	Loss 0.4348	Acc@1 76.562	Acc@5 100.000	Precision 0.727	Recall 0.400	Macro_f1 0.516	Micro_f1 0.516	
 ** Acc@1 77.688, Acc@5 100.000, precision 0.716, recall 0.495, macro_f1 0.577, micro_f1 0.577
saving the best model!
==> training...
Epoch: [2][0/378]	GPU 0	Time: 1.012	Loss 0.4741	Acc@1 75.000	Acc@5 100.000	Precision 1.000	Recall 0.111	Macro_f1 0.200	Micro_f1 0.200	
Traceback (most recent call last):
  File "train_teacher.py", line 320, in <module>
    main()
  File "train_teacher.py", line 117, in main
    main_worker(None if ngpus_per_node > 1 else opt.gpu_id, ngpus_per_node, opt)
  File "train_teacher.py", line 211, in main_worker
    train_acc, train_acc_top5, train_loss, precision, recall, macro_f1, micro_f1 = train(epoch, train_loader, model, criterion, optimizer, opt)
  File "/content/drive/.shortcut-targets-by-id/1aAWk40Gy3z7CoH8LjUDuJOtYT0RfUzYr/CSE499/SimKD/helper/loops.py", line 40, in train_vanilla
    losses.update(loss.item(), images.size(0))
KeyboardInterrupt