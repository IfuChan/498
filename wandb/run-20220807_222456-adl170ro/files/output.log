Use GPU: 0 for training
==> loading teacher model
==> done
Test: [0/95]	GPU: 0	Time: 2.655	Loss 0.4037	Acc@1 89.062	Acc@5 100.000	Precision 0.882	Recall 0.750	
teacher accuracy:  85.8914984987936
==> training...
Epoch: [1][0/378]	GPU 0	Time: 1.236	Loss 0.5134	Acc@1 65.625	Acc@5 100.000	Precision 0.000	Recall 0.000	
Epoch: [1][200/378]	GPU 0	Time: 50.088	Loss 0.0797	Acc@1 68.183	Acc@5 100.000	Precision 0.005	Recall 0.000	
 * Epoch 1, GPU 0, Acc@1 68.343, Acc@5 100.000, precision 0.003, recall 0.000, Time 183.41
GPU 0 validating
Test: [0/95]	GPU: 0	Time: 1.005	Loss 0.8185	Acc@1 68.750	Acc@5 100.000	Precision 0.000	Recall 0.000	
 ** Acc@1 68.508, Acc@5 100.000, precision 0.000, recall 0.000
saving the best model!
==> training...
Epoch: [2][0/378]	GPU 0	Time: 1.059	Loss 0.0326	Acc@1 70.312	Acc@5 100.000	Precision 0.000	Recall 0.000	
Epoch: [2][200/378]	GPU 0	Time: 48.532	Loss 0.0352	Acc@1 68.252	Acc@5 100.000	Precision 0.010	Recall 0.001	
 * Epoch 2, GPU 0, Acc@1 68.579, Acc@5 100.000, precision 0.127, recall 0.011, Time 180.03
GPU 0 validating
Test: [0/95]	GPU: 0	Time: 1.010	Loss 0.6682	Acc@1 68.750	Acc@5 100.000	Precision 0.000	Recall 0.000	
 ** Acc@1 68.508, Acc@5 100.000, precision 0.000, recall 0.000
==> training...
Epoch: [3][0/378]	GPU 0	Time: 1.029	Loss 0.0293	Acc@1 73.438	Acc@5 100.000	Precision 1.000	Recall 0.056	
Traceback (most recent call last):
  File "train_student.py", line 477, in <module>
    main()
  File "train_student.py", line 180, in main
    main_worker(None if ngpus_per_node > 1 else opt.gpu_id, ngpus_per_node, opt)
  File "train_student.py", line 381, in main_worker
    train_acc, train_acc_top5, train_loss, precision, recall = train(epoch, train_loader, module_list, criterion_list, optimizer, opt)
  File "/content/drive/.shortcut-targets-by-id/1aAWk40Gy3z7CoH8LjUDuJOtYT0RfUzYr/CSE499/SimKD/helper/loops.py", line 176, in train_distill
    losses.update(loss.item(), images.size(0))
KeyboardInterrupt