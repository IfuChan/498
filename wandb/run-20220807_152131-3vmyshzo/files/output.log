Use GPU: 0 for training
==> loading teacher model
==> done
Test: [0/95]	GPU: 0	Time: 8.097	Loss 0.4345	Acc@1 87.500	Acc@5 100.000	Precision 0.833	Recall 0.750	
teacher accuracy:  85.2795236393824
==> training...
Epoch: [1][0/378]	GPU 0	Time: 1.538	Loss 3.5564	Acc@1 64.062	Acc@5 100.000]tPrecision 0.000	Recall 0.000	
Epoch: [1][200/378]	GPU 0	Time: 43.816	Loss 2.7145	Acc@1 68.284	Acc@5 100.000]tPrecision 0.005	Recall 0.000	
 * Epoch 1, GPU 0, Acc@1 68.359, Acc@5 100.000, precision 0.003, recall 0.000, Time 159.69
GPU 0 validating
Test: [0/95]	GPU: 0	Time: 1.005	Loss 0.6121	Acc@1 68.750	Acc@5 100.000	Precision 0.000	Recall 0.000	
 ** Acc@1 68.508, Acc@5 100.000, precision 0.000, recall 0.000
saving the best model!
==> training...
Epoch: [2][0/378]	GPU 0	Time: 1.038	Loss 2.7952	Acc@1 54.688	Acc@5 100.000]tPrecision 0.000	Recall 0.000	
Epoch: [2][200/378]	GPU 0	Time: 41.097	Loss 2.2390	Acc@1 68.136	Acc@5 100.000]tPrecision 0.000	Recall 0.000	
 * Epoch 2, GPU 0, Acc@1 68.359, Acc@5 100.000, precision 0.000, recall 0.000, Time 152.35
GPU 0 validating
Test: [0/95]	GPU: 0	Time: 1.001	Loss 0.6719	Acc@1 68.750	Acc@5 100.000	Precision 0.000	Recall 0.000	
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py", line 652, in __next__
    data = self._next_data()
  File "/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py", line 1330, in _next_data
    idx, data = self._get_data()
  File "/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py", line 1296, in _get_data
    success, data = self._try_get_data()
  File "/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py", line 1134, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/usr/lib/python3.7/multiprocessing/queues.py", line 104, in get
    if not self._poll(timeout):
  File "/usr/lib/python3.7/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/usr/lib/python3.7/multiprocessing/connection.py", line 414, in _poll
    r = wait([self], timeout)
  File "/usr/lib/python3.7/multiprocessing/connection.py", line 921, in wait
    ready = selector.select(timeout)
  File "/usr/lib/python3.7/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "train_student.py", line 458, in <module>
    main()
  File "train_student.py", line 176, in main
    main_worker(None if ngpus_per_node > 1 else opt.gpu_id, ngpus_per_node, opt)
  File "train_student.py", line 400, in main_worker
    test_acc, test_acc_top5, test_loss, precision, recall = validate_distill(val_loader, module_list, criterion_cls, opt)
  File "/content/drive/.shortcut-targets-by-id/1aAWk40Gy3z7CoH8LjUDuJOtYT0RfUzYr/CSE499/SimKD/helper/loops.py", line 310, in validate_distill
    for idx, batch_data in enumerate(val_loader):
  File "/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py", line 665, in __next__
    return data
  File "/usr/local/lib/python3.7/dist-packages/torch/autograd/profiler.py", line 451, in __exit__
    torch.ops.profiler._record_function_exit(self.handle)
  File "/usr/local/lib/python3.7/dist-packages/torch/_ops.py", line 143, in __call__
    return self._op(*args, **kwargs or {})
KeyboardInterrupt